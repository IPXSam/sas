SAS is a DCPU-16 assembler.
sas stands for simple assembler. It outputs object files which then
are fed into the linker to then generate binary files. Why can't it
generate binary files directly? this is because I needed tools that
would work the way I wanted for system/kernel development.

The assembler is written entirely in C with yacc and lex for parsing.
Released under the the GPL v2.

To build it simply type "make".

Tested on Linux kernel and Solaris (SunOS) (look below for testings).

It supports multiple assembly files, and always generates 1 object
file. Here are some directives it supports:

DIRECTIVES:
DAT <value>/"<string>", ...	outputs values and 16 bit strings

TODO:
.ascii8 "<string>"		outputs 8 bit strings
				(2 characters packed in a word)
.org <address>			set instruction origin to <address>
.define <symbol> <value>	set <symbol> to <value> (is global)
.fill <length> <value>		fills binary with <value> for <length> words

--lib command line option for symbol only object file generation.

If you want to contact me, my email is samuel.dominguez.lorenzo@gmail.com
bugs, issues, requests send them through Github.

Testing
-------
It should compile with gcc, bison, flex and make.

Tested on Linux kernel 3.16.0-4-amd64:
- gcc 		4.9.2
- bison 	3.0.2
- flex		2.5.39
- make		4.0

Tested on Oracle Solaris (SunOS 5.11) 11.2 i86pc i386
- gcc		4.8.2
- bison		2.3
- flex		2.5.35
- make		sysV-make
